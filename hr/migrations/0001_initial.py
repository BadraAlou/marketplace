# Generated by Django 5.2 on 2025-06-24 11:03

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, unique=True, verbose_name='ID Employé')),
                ('first_name', models.CharField(max_length=50, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=50, verbose_name='Nom de famille')),
                ('middle_name', models.CharField(blank=True, max_length=50, verbose_name='Deuxième prénom')),
                ('maiden_name', models.CharField(blank=True, max_length=50, verbose_name='Nom de jeune fille')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email professionnel')),
                ('personal_email', models.EmailField(blank=True, max_length=254, verbose_name='Email personnel')),
                ('phone', models.CharField(max_length=20, verbose_name='Téléphone principal')),
                ('mobile_phone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone mobile')),
                ('whatsapp', models.CharField(blank=True, max_length=20, verbose_name='WhatsApp')),
                ('date_of_birth', models.DateField(verbose_name='Date de naissance')),
                ('place_of_birth', models.CharField(max_length=100, verbose_name='Lieu de naissance')),
                ('gender', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin'), ('O', 'Autre')], max_length=1, verbose_name='Genre')),
                ('marital_status', models.CharField(choices=[('single', 'Célibataire'), ('married', 'Marié(e)'), ('divorced', 'Divorcé(e)'), ('widowed', 'Veuf/Veuve'), ('partnership', 'Union libre')], max_length=20, verbose_name='Statut marital')),
                ('nationality', models.CharField(max_length=50, verbose_name='Nationalité')),
                ('id_number', models.CharField(max_length=50, verbose_name="Numéro de pièce d'identité")),
                ('passport_number', models.CharField(blank=True, max_length=50, verbose_name='Numéro de passeport')),
                ('social_security_number', models.CharField(blank=True, max_length=50, verbose_name='Numéro de sécurité sociale')),
                ('address', models.TextField(verbose_name='Adresse complète')),
                ('city', models.CharField(max_length=100, verbose_name='Ville')),
                ('postal_code', models.CharField(max_length=20, verbose_name='Code postal')),
                ('country', models.CharField(default="Côte d'Ivoire", max_length=50, verbose_name='Pays')),
                ('secondary_address', models.TextField(blank=True, verbose_name='Adresse secondaire')),
                ('secondary_city', models.CharField(blank=True, max_length=100, verbose_name='Ville secondaire')),
                ('secondary_postal_code', models.CharField(blank=True, max_length=20, verbose_name='Code postal secondaire')),
                ('department', models.CharField(choices=[('admin', 'Administration'), ('tech', 'Technique'), ('marketing', 'Marketing'), ('sales', 'Ventes'), ('support', 'Support Client'), ('finance', 'Finance'), ('hr', 'Ressources Humaines'), ('logistics', 'Logistique'), ('production', 'Production'), ('quality', 'Qualité'), ('legal', 'Juridique'), ('communication', 'Communication')], max_length=20, verbose_name='Département')),
                ('position', models.CharField(max_length=100, verbose_name='Poste')),
                ('job_description', models.TextField(blank=True, verbose_name='Description du poste')),
                ('hire_date', models.DateField(verbose_name="Date d'embauche")),
                ('probation_end_date', models.DateField(blank=True, null=True, verbose_name="Fin de période d'essai")),
                ('contract_type', models.CharField(choices=[('cdi', 'CDI - Contrat à Durée Indéterminée'), ('cdd', 'CDD - Contrat à Durée Déterminée'), ('stage', 'Stage'), ('apprentissage', "Contrat d'apprentissage"), ('freelance', 'Freelance'), ('consultant', 'Consultant'), ('interim', 'Intérim'), ('volontariat', 'Volontariat')], max_length=20, verbose_name='Type de contrat')),
                ('contract_start_date', models.DateField(verbose_name='Début de contrat')),
                ('contract_end_date', models.DateField(blank=True, null=True, verbose_name='Fin de contrat (si CDD)')),
                ('salary', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Salaire mensuel (F CFA)')),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Taux horaire')),
                ('overtime_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Taux heures sup.')),
                ('work_schedule', models.CharField(default='Lun-Ven 8h-17h', max_length=100, verbose_name='Horaires de travail')),
                ('weekly_hours', models.PositiveIntegerField(default=40, verbose_name='Heures hebdomadaires')),
                ('status', models.CharField(choices=[('active', 'Actif'), ('inactive', 'Inactif'), ('on_leave', 'En congé'), ('terminated', 'Licencié'), ('retired', 'Retraité'), ('suspended', 'Suspendu'), ('probation', "Période d'essai")], default='probation', max_length=20, verbose_name='Statut')),
                ('termination_date', models.DateField(blank=True, null=True, verbose_name='Date de fin')),
                ('termination_reason', models.TextField(blank=True, verbose_name='Motif de fin de contrat')),
                ('bank_name', models.CharField(blank=True, max_length=100, verbose_name='Nom de la banque')),
                ('bank_account', models.CharField(blank=True, max_length=50, verbose_name='Numéro de compte')),
                ('iban', models.CharField(blank=True, max_length=50, verbose_name='IBAN')),
                ('swift_code', models.CharField(blank=True, max_length=20, verbose_name='Code SWIFT')),
                ('education_level', models.CharField(blank=True, choices=[('primary', 'Primaire'), ('secondary', 'Secondaire'), ('bac', 'Baccalauréat'), ('bac_plus_2', 'Bac+2'), ('bac_plus_3', 'Bac+3 (Licence)'), ('bac_plus_5', 'Bac+5 (Master)'), ('doctorate', 'Doctorat'), ('other', 'Autre')], max_length=20, verbose_name="Niveau d'éducation")),
                ('university', models.CharField(blank=True, max_length=200, verbose_name='Université/École')),
                ('degree', models.CharField(blank=True, max_length=200, verbose_name='Diplôme')),
                ('graduation_year', models.PositiveIntegerField(blank=True, null=True, verbose_name="Année d'obtention")),
                ('emergency_contact_1_name', models.CharField(max_length=100, verbose_name="Contact d'urgence 1 - Nom")),
                ('emergency_contact_1_phone', models.CharField(max_length=20, verbose_name="Contact d'urgence 1 - Téléphone")),
                ('emergency_contact_1_relationship', models.CharField(max_length=50, verbose_name='Lien de parenté 1')),
                ('emergency_contact_2_name', models.CharField(blank=True, max_length=100, verbose_name="Contact d'urgence 2 - Nom")),
                ('emergency_contact_2_phone', models.CharField(blank=True, max_length=20, verbose_name="Contact d'urgence 2 - Téléphone")),
                ('emergency_contact_2_relationship', models.CharField(blank=True, max_length=50, verbose_name='Lien de parenté 2')),
                ('blood_type', models.CharField(blank=True, max_length=5, verbose_name='Groupe sanguin')),
                ('allergies', models.TextField(blank=True, verbose_name='Allergies')),
                ('medical_conditions', models.TextField(blank=True, verbose_name='Conditions médicales')),
                ('medical_insurance_number', models.CharField(blank=True, max_length=50, verbose_name='Numéro assurance maladie')),
                ('skills', models.TextField(blank=True, verbose_name='Compétences')),
                ('languages', models.TextField(blank=True, verbose_name='Langues parlées')),
                ('certifications', models.TextField(blank=True, verbose_name='Certifications')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='employees/photos/', verbose_name='Photo')),
                ('signature', models.ImageField(blank=True, null=True, upload_to='employees/signatures/', verbose_name='Signature')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('preferred_communication', models.CharField(choices=[('email', 'Email'), ('phone', 'Téléphone'), ('whatsapp', 'WhatsApp')], default='email', max_length=20, verbose_name='Communication préférée')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('created_by', models.CharField(blank=True, max_length=100, verbose_name='Créé par')),
                ('last_modified_by', models.CharField(blank=True, max_length=100, verbose_name='Modifié par')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinates', to='hr.employee', verbose_name='Manager direct')),
            ],
            options={
                'verbose_name': 'Employé',
                'verbose_name_plural': 'Employés',
                'ordering': ['employee_id'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_id', models.CharField(max_length=20, unique=True, verbose_name='ID Document')),
                ('document_type', models.CharField(choices=[('contract', 'Contrat de travail'), ('amendment', 'Avenant au contrat'), ('id_copy', "Copie pièce d'identité"), ('passport', 'Passeport'), ('diploma', 'Diplôme'), ('certificate', 'Certificat'), ('medical', 'Certificat médical'), ('performance', 'Évaluation de performance'), ('disciplinary', 'Mesure disciplinaire'), ('warning', 'Avertissement'), ('resignation', 'Lettre de démission'), ('termination', 'Lettre de licenciement'), ('reference', 'Lettre de recommandation'), ('training_cert', 'Certificat de formation'), ('bank_details', 'RIB'), ('insurance', 'Assurance'), ('other', 'Autre')], max_length=20, verbose_name='Type de document')),
                ('title', models.CharField(max_length=200, verbose_name='Titre du document')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('file', models.FileField(upload_to='employees/documents/', verbose_name='Fichier')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='Taille du fichier (bytes)')),
                ('file_type', models.CharField(blank=True, max_length=50, verbose_name='Type de fichier')),
                ('upload_date', models.DateTimeField(auto_now_add=True, verbose_name="Date d'upload")),
                ('document_date', models.DateField(blank=True, null=True, verbose_name='Date du document')),
                ('effective_date', models.DateField(blank=True, null=True, verbose_name="Date d'entrée en vigueur")),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name="Date d'expiration")),
                ('confidentiality_level', models.CharField(choices=[('public', 'Public'), ('internal', 'Interne'), ('confidential', 'Confidentiel'), ('restricted', 'Restreint'), ('secret', 'Secret')], default='internal', max_length=20, verbose_name='Niveau de confidentialité')),
                ('is_original', models.BooleanField(default=True, verbose_name='Document original')),
                ('requires_signature', models.BooleanField(default=False, verbose_name='Signature requise')),
                ('is_signed', models.BooleanField(default=False, verbose_name='Signé')),
                ('version', models.CharField(default='1.0', max_length=10, verbose_name='Version')),
                ('uploaded_by', models.CharField(blank=True, max_length=100, verbose_name='Uploadé par')),
                ('validation_date', models.DateTimeField(blank=True, null=True, verbose_name='Date de validation')),
                ('notify_before_expiry', models.BooleanField(default=False, verbose_name='Notifier avant expiration')),
                ('notification_days', models.PositiveIntegerField(default=30, verbose_name='Jours avant notification')),
                ('tags', models.CharField(blank=True, max_length=500, verbose_name='Tags (séparés par des virgules)')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hr.document', verbose_name='Version précédente')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.employee', verbose_name='Employé')),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_documents', to='hr.employee', verbose_name='Validé par')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='Disciplinary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disciplinary_id', models.CharField(max_length=20, unique=True, verbose_name='ID Mesure')),
                ('disciplinary_type', models.CharField(choices=[('verbal_warning', 'Avertissement verbal'), ('written_warning', 'Avertissement écrit'), ('final_warning', 'Avertissement final'), ('suspension', 'Suspension'), ('demotion', 'Rétrogradation'), ('salary_reduction', 'Réduction de salaire'), ('termination', 'Licenciement'), ('dismissal', 'Licenciement pour faute grave')], max_length=20, verbose_name='Type de mesure')),
                ('severity', models.CharField(choices=[('minor', 'Mineur'), ('moderate', 'Modéré'), ('serious', 'Grave'), ('severe', 'Très grave'), ('critical', 'Critique')], max_length=10, verbose_name='Gravité')),
                ('incident_date', models.DateField(verbose_name="Date de l'incident")),
                ('incident_description', models.TextField(verbose_name="Description de l'incident")),
                ('incident_location', models.CharField(blank=True, max_length=200, verbose_name="Lieu de l'incident")),
                ('witnesses', models.TextField(blank=True, verbose_name='Témoins')),
                ('action_date', models.DateField(verbose_name='Date de la mesure')),
                ('action_description', models.TextField(verbose_name='Description de la mesure')),
                ('duration_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='Durée en jours')),
                ('effective_date', models.DateField(verbose_name="Date d'entrée en vigueur")),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Date de fin')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('active', 'Actif'), ('completed', 'Terminé'), ('appealed', 'Contesté'), ('overturned', 'Annulé')], default='pending', max_length=20, verbose_name='Statut')),
                ('employee_response', models.TextField(blank=True, verbose_name="Réponse de l'employé")),
                ('employee_acknowledgment', models.BooleanField(default=False, verbose_name='Accusé de réception employé')),
                ('acknowledgment_date', models.DateField(blank=True, null=True, verbose_name="Date d'accusé de réception")),
                ('appeal_submitted', models.BooleanField(default=False, verbose_name='Appel soumis')),
                ('appeal_date', models.DateField(blank=True, null=True, verbose_name="Date d'appel")),
                ('appeal_reason', models.TextField(blank=True, verbose_name="Motif d'appel")),
                ('appeal_outcome', models.TextField(blank=True, verbose_name="Résultat de l'appel")),
                ('supporting_documents', models.FileField(blank=True, null=True, upload_to='disciplinary/', verbose_name='Documents justificatifs')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('hr_comments', models.TextField(blank=True, verbose_name='Commentaires RH')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_disciplinaries', to='hr.employee', verbose_name='Approuvé par')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.employee', verbose_name='Employé')),
                ('issued_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issued_disciplinaries', to='hr.employee', verbose_name='Émis par')),
            ],
            options={
                'verbose_name': 'Mesure disciplinaire',
                'verbose_name_plural': 'Mesures disciplinaires',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom du département')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Budget annuel (F CFA)')),
                ('location', models.CharField(blank=True, max_length=200, verbose_name='Localisation')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone du département')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email du département')),
                ('objectives', models.TextField(blank=True, verbose_name='Objectifs du département')),
                ('kpis', models.TextField(blank=True, verbose_name='Indicateurs de performance')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assistant_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assistant_managed_department', to='hr.employee', verbose_name='Responsable adjoint')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_department', to='hr.employee', verbose_name='Responsable')),
            ],
            options={
                'verbose_name': 'Département',
                'verbose_name_plural': 'Départements',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Intern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intern_id', models.CharField(max_length=20, unique=True, verbose_name='ID Stagiaire')),
                ('first_name', models.CharField(max_length=50, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=50, verbose_name='Nom de famille')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(max_length=20, verbose_name='Téléphone')),
                ('date_of_birth', models.DateField(verbose_name='Date de naissance')),
                ('address', models.TextField(verbose_name='Adresse')),
                ('city', models.CharField(max_length=100, verbose_name='Ville')),
                ('postal_code', models.CharField(max_length=20, verbose_name='Code postal')),
                ('school', models.CharField(max_length=200, verbose_name='École/Université')),
                ('field_of_study', models.CharField(max_length=200, verbose_name="Domaine d'études")),
                ('academic_level', models.CharField(max_length=100, verbose_name='Niveau académique')),
                ('academic_year', models.CharField(max_length=20, verbose_name='Année académique')),
                ('internship_type', models.CharField(choices=[('observation', "Stage d'observation"), ('application', "Stage d'application"), ('professional', 'Stage professionnel'), ('graduation', "Stage de fin d'études"), ('voluntary', 'Stage volontaire')], max_length=20, verbose_name='Type de stage')),
                ('department', models.CharField(choices=[('admin', 'Administration'), ('tech', 'Technique'), ('marketing', 'Marketing'), ('sales', 'Ventes'), ('support', 'Support Client'), ('finance', 'Finance'), ('hr', 'Ressources Humaines'), ('logistics', 'Logistique'), ('production', 'Production'), ('quality', 'Qualité'), ('legal', 'Juridique'), ('communication', 'Communication')], max_length=20, verbose_name='Département')),
                ('start_date', models.DateField(verbose_name='Date de début')),
                ('end_date', models.DateField(verbose_name='Date de fin')),
                ('duration_weeks', models.PositiveIntegerField(verbose_name='Durée en semaines')),
                ('objectives', models.TextField(verbose_name='Objectifs du stage')),
                ('tasks_assigned', models.TextField(blank=True, verbose_name='Tâches assignées')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Stage rémunéré')),
                ('monthly_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Indemnité mensuelle')),
                ('status', models.CharField(choices=[('active', 'En cours'), ('completed', 'Terminé'), ('terminated', 'Interrompu'), ('extended', 'Prolongé')], default='active', max_length=20, verbose_name='Statut')),
                ('emergency_contact_name', models.CharField(max_length=100, verbose_name="Contact d'urgence - Nom")),
                ('emergency_contact_phone', models.CharField(max_length=20, verbose_name="Contact d'urgence - Téléphone")),
                ('emergency_contact_relationship', models.CharField(max_length=50, verbose_name='Lien de parenté')),
                ('convention_signed', models.BooleanField(default=False, verbose_name='Convention signée')),
                ('final_report_submitted', models.BooleanField(default=False, verbose_name='Rapport final soumis')),
                ('final_grade', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Note finale (/20)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('created_by', models.CharField(blank=True, max_length=100, verbose_name='Créé par')),
                ('supervisor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervised_interns', to='hr.employee', verbose_name='Superviseur')),
            ],
            options={
                'verbose_name': 'Stagiaire',
                'verbose_name_plural': 'Stagiaires',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='ID Demande')),
                ('leave_type', models.CharField(choices=[('vacation', 'Congés payés'), ('sick', 'Congé maladie'), ('personal', 'Congé personnel'), ('maternity', 'Congé maternité'), ('paternity', 'Congé paternité'), ('bereavement', 'Congé de deuil'), ('training', 'Formation'), ('compensatory', 'Récupération'), ('unpaid', 'Congé sans solde'), ('sabbatical', 'Congé sabbatique'), ('other', 'Autre')], max_length=20, verbose_name='Type de congé')),
                ('start_date', models.DateField(verbose_name='Date de début')),
                ('end_date', models.DateField(verbose_name='Date de fin')),
                ('days_requested', models.PositiveIntegerField(verbose_name='Nombre de jours')),
                ('half_day_start', models.BooleanField(default=False, verbose_name='Demi-journée début')),
                ('half_day_end', models.BooleanField(default=False, verbose_name='Demi-journée fin')),
                ('reason', models.TextField(verbose_name='Motif')),
                ('priority', models.CharField(choices=[('low', 'Faible'), ('normal', 'Normal'), ('high', 'Élevée'), ('urgent', 'Urgent')], default='normal', max_length=10, verbose_name='Priorité')),
                ('supporting_documents', models.FileField(blank=True, null=True, upload_to='leave_requests/', verbose_name='Documents justificatifs')),
                ('handover_notes', models.TextField(blank=True, verbose_name='Notes de passation')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('approved', 'Approuvé'), ('rejected', 'Rejeté'), ('cancelled', 'Annulé'), ('in_progress', 'En cours'), ('completed', 'Terminé')], default='pending', max_length=20, verbose_name='Statut')),
                ('approved_date', models.DateTimeField(blank=True, null=True, verbose_name="Date d'approbation")),
                ('rejection_reason', models.TextField(blank=True, verbose_name='Motif de refus')),
                ('comments', models.TextField(blank=True, verbose_name='Commentaires')),
                ('hr_comments', models.TextField(blank=True, verbose_name='Commentaires RH')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_leaves', to='hr.employee', verbose_name='Approuvé par')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.employee', verbose_name='Employé')),
                ('replacement_employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replacement_leaves', to='hr.employee', verbose_name='Remplaçant')),
            ],
            options={
                'verbose_name': 'Demande de congé',
                'verbose_name_plural': 'Demandes de congé',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_id', models.CharField(max_length=20, unique=True, verbose_name='ID Évaluation')),
                ('evaluation_type', models.CharField(choices=[('annual', 'Évaluation annuelle'), ('probation', "Fin de période d'essai"), ('mid_year', 'Mi-parcours'), ('project', 'Fin de projet'), ('promotion', 'Promotion'), ('disciplinary', 'Disciplinaire')], max_length=20, verbose_name="Type d'évaluation")),
                ('period_start', models.DateField(verbose_name='Début de période')),
                ('period_end', models.DateField(verbose_name='Fin de période')),
                ('evaluation_date', models.DateField(verbose_name="Date d'évaluation")),
                ('overall_rating', models.IntegerField(choices=[(1, 'Insuffisant'), (2, 'Satisfaisant'), (3, 'Bien'), (4, 'Très bien'), (5, 'Excellent')], verbose_name='Note globale')),
                ('technical_skills', models.IntegerField(choices=[(1, 'Insuffisant'), (2, 'Satisfaisant'), (3, 'Bien'), (4, 'Très bien'), (5, 'Excellent')], verbose_name='Compétences techniques')),
                ('job_knowledge', models.IntegerField(choices=[(1, 'Insuffisant'), (2, 'Satisfaisant'), (3, 'Bien'), (4, 'Très bien'), (5, 'Excellent')], verbose_name='Connaissance du poste')),
                ('quality_of_work', models.IntegerField(choices=[(1, 'Insuffisant'), (2, 'Satisfaisant'), (3, 'Bien'), (4, 'Très bien'), (5, 'Excellent')], verbose_name='Qualité du travail')),
                ('productivity', models.IntegerField(choices=[(1, 'Insuffisant'), (2, 'Satisfaisant'), (3, 'Bien'), (4, 'Très bien'), (5, 'Excellent')], verbose_name='Productivité')),
                ('innovation', models.IntegerField(choices=[(1, 'Insuffisant'), (2, 'Satisfaisant'), (3, 'Bien'), (4, 'Très bien'), (5, 'Excellent')], verbose_name='Innovation')),
                ('communication', models.IntegerField(choices=[(1, 'Insuffisant'), (2, 'Satisfaisant'), (3, 'Bien'), (4, 'Très bien'), (5, 'Excellent')], verbose_name='Communication')),
                ('teamwork', models.IntegerField(choices=[(1, 'Insuffisant'), (2, 'Satisfaisant'), (3, 'Bien'), (4, 'Très bien'), (5, 'Excellent')], verbose_name="Travail d'équipe")),
                ('leadership', models.IntegerField(choices=[(1, 'Insuffisant'), (2, 'Satisfaisant'), (3, 'Bien'), (4, 'Très bien'), (5, 'Excellent')], verbose_name='Leadership')),
                ('initiative', models.IntegerField(choices=[(1, 'Insuffisant'), (2, 'Satisfaisant'), (3, 'Bien'), (4, 'Très bien'), (5, 'Excellent')], verbose_name='Initiative')),
                ('adaptability', models.IntegerField(choices=[(1, 'Insuffisant'), (2, 'Satisfaisant'), (3, 'Bien'), (4, 'Très bien'), (5, 'Excellent')], verbose_name='Adaptabilité')),
                ('punctuality', models.IntegerField(choices=[(1, 'Insuffisant'), (2, 'Satisfaisant'), (3, 'Bien'), (4, 'Très bien'), (5, 'Excellent')], verbose_name='Ponctualité')),
                ('reliability', models.IntegerField(choices=[(1, 'Insuffisant'), (2, 'Satisfaisant'), (3, 'Bien'), (4, 'Très bien'), (5, 'Excellent')], verbose_name='Fiabilité')),
                ('professionalism', models.IntegerField(choices=[(1, 'Insuffisant'), (2, 'Satisfaisant'), (3, 'Bien'), (4, 'Très bien'), (5, 'Excellent')], verbose_name='Professionnalisme')),
                ('customer_service', models.IntegerField(choices=[(1, 'Insuffisant'), (2, 'Satisfaisant'), (3, 'Bien'), (4, 'Très bien'), (5, 'Excellent')], verbose_name='Service client')),
                ('problem_solving', models.IntegerField(choices=[(1, 'Insuffisant'), (2, 'Satisfaisant'), (3, 'Bien'), (4, 'Très bien'), (5, 'Excellent')], verbose_name='Résolution de problèmes')),
                ('objectives_met', models.TextField(verbose_name='Objectifs atteints')),
                ('objectives_missed', models.TextField(blank=True, verbose_name='Objectifs non atteints')),
                ('key_achievements', models.TextField(verbose_name='Réalisations clés')),
                ('strengths', models.TextField(verbose_name='Points forts')),
                ('areas_for_improvement', models.TextField(verbose_name="Axes d'amélioration")),
                ('development_plan', models.TextField(verbose_name='Plan de développement')),
                ('goals_next_period', models.TextField(verbose_name='Objectifs pour la prochaine période')),
                ('evaluator_comments', models.TextField(verbose_name="Commentaires de l'évaluateur")),
                ('employee_comments', models.TextField(blank=True, verbose_name="Commentaires de l'employé")),
                ('hr_comments', models.TextField(blank=True, verbose_name='Commentaires RH')),
                ('salary_increase_recommended', models.BooleanField(default=False, verbose_name='Augmentation recommandée')),
                ('salary_increase_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name="Pourcentage d'augmentation (%)")),
                ('promotion_recommended', models.BooleanField(default=False, verbose_name='Promotion recommandée')),
                ('promotion_position', models.CharField(blank=True, max_length=100, verbose_name='Poste de promotion')),
                ('training_recommended', models.TextField(blank=True, verbose_name='Formations recommandées')),
                ('employee_signature_date', models.DateField(blank=True, null=True, verbose_name='Date signature employé')),
                ('evaluator_signature_date', models.DateField(blank=True, null=True, verbose_name='Date signature évaluateur')),
                ('hr_approval_date', models.DateField(blank=True, null=True, verbose_name='Date approbation RH')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.employee', verbose_name='Employé')),
                ('evaluator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations_given', to='hr.employee', verbose_name='Évaluateur')),
            ],
            options={
                'verbose_name': 'Évaluation de performance',
                'verbose_name_plural': 'Évaluations de performance',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Recruitment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_id', models.CharField(max_length=20, unique=True, verbose_name='ID Poste')),
                ('title', models.CharField(max_length=200, verbose_name='Titre du poste')),
                ('department', models.CharField(choices=[('admin', 'Administration'), ('tech', 'Technique'), ('marketing', 'Marketing'), ('sales', 'Ventes'), ('support', 'Support Client'), ('finance', 'Finance'), ('hr', 'Ressources Humaines'), ('logistics', 'Logistique'), ('production', 'Production'), ('quality', 'Qualité'), ('legal', 'Juridique'), ('communication', 'Communication')], max_length=20, verbose_name='Département')),
                ('job_type', models.CharField(choices=[('full_time', 'Temps plein'), ('part_time', 'Temps partiel'), ('contract', 'Contractuel'), ('internship', 'Stage'), ('temporary', 'Temporaire'), ('freelance', 'Freelance')], max_length=20, verbose_name="Type d'emploi")),
                ('job_description', models.TextField(verbose_name='Description du poste')),
                ('responsibilities', models.TextField(verbose_name='Responsabilités')),
                ('requirements', models.TextField(verbose_name='Exigences')),
                ('qualifications', models.TextField(verbose_name='Qualifications')),
                ('skills_required', models.TextField(verbose_name='Compétences requises')),
                ('experience_required', models.CharField(max_length=100, verbose_name='Expérience requise')),
                ('salary_min', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Salaire minimum')),
                ('salary_max', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Salaire maximum')),
                ('benefits', models.TextField(blank=True, verbose_name='Avantages')),
                ('work_location', models.CharField(max_length=200, verbose_name='Lieu de travail')),
                ('remote_work_allowed', models.BooleanField(default=False, verbose_name='Télétravail autorisé')),
                ('posting_date', models.DateField(verbose_name='Date de publication')),
                ('application_deadline', models.DateField(verbose_name='Date limite de candidature')),
                ('target_start_date', models.DateField(blank=True, null=True, verbose_name='Date de prise de poste souhaitée')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('open', 'Ouvert'), ('closed', 'Fermé'), ('on_hold', 'En attente'), ('filled', 'Pourvu'), ('cancelled', 'Annulé')], default='draft', max_length=20, verbose_name='Statut')),
                ('priority', models.CharField(choices=[('low', 'Faible'), ('normal', 'Normal'), ('high', 'Élevée'), ('urgent', 'Urgent')], default='normal', max_length=10, verbose_name='Priorité')),
                ('positions_available', models.PositiveIntegerField(default=1, verbose_name='Postes disponibles')),
                ('positions_filled', models.PositiveIntegerField(default=0, verbose_name='Postes pourvus')),
                ('budget_approved', models.BooleanField(default=False, verbose_name='Budget approuvé')),
                ('approval_date', models.DateField(blank=True, null=True, verbose_name="Date d'approbation")),
                ('internal_notes', models.TextField(blank=True, verbose_name='Notes internes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_recruitments', to='hr.employee', verbose_name='Approuvé par')),
                ('hiring_manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_recruitments', to='hr.employee', verbose_name='Responsable recrutement')),
                ('recruiter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handled_recruitments', to='hr.employee', verbose_name='Recruteur')),
            ],
            options={
                'verbose_name': 'Recrutement',
                'verbose_name_plural': 'Recrutements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_id', models.CharField(max_length=20, unique=True, verbose_name='ID Candidature')),
                ('first_name', models.CharField(max_length=50, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=50, verbose_name='Nom')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(max_length=20, verbose_name='Téléphone')),
                ('address', models.TextField(verbose_name='Adresse')),
                ('resume', models.FileField(upload_to='applications/resumes/', verbose_name='CV')),
                ('cover_letter', models.FileField(blank=True, null=True, upload_to='applications/cover_letters/', verbose_name='Lettre de motivation')),
                ('portfolio', models.URLField(blank=True, verbose_name='Portfolio (URL)')),
                ('current_position', models.CharField(blank=True, max_length=200, verbose_name='Poste actuel')),
                ('current_company', models.CharField(blank=True, max_length=200, verbose_name='Entreprise actuelle')),
                ('years_experience', models.PositiveIntegerField(verbose_name="Années d'expérience")),
                ('education_level', models.CharField(choices=[('primary', 'Primaire'), ('secondary', 'Secondaire'), ('bac', 'Baccalauréat'), ('bac_plus_2', 'Bac+2'), ('bac_plus_3', 'Bac+3 (Licence)'), ('bac_plus_5', 'Bac+5 (Master)'), ('doctorate', 'Doctorat'), ('other', 'Autre')], max_length=20, verbose_name="Niveau d'éducation")),
                ('salary_expectation', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Prétentions salariales')),
                ('availability_date', models.DateField(verbose_name='Date de disponibilité')),
                ('notice_period', models.CharField(blank=True, max_length=100, verbose_name='Préavis')),
                ('status', models.CharField(choices=[('submitted', 'Soumise'), ('under_review', "En cours d'examen"), ('shortlisted', 'Présélectionnée'), ('interview_scheduled', 'Entretien programmé'), ('interviewed', 'Entretien passé'), ('second_interview', 'Deuxième entretien'), ('reference_check', 'Vérification des références'), ('offer_made', 'Offre faite'), ('offer_accepted', 'Offre acceptée'), ('offer_declined', 'Offre refusée'), ('hired', 'Embauché'), ('rejected', 'Rejeté'), ('withdrawn', 'Retirée')], default='submitted', max_length=20, verbose_name='Statut')),
                ('application_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de candidature')),
                ('screening_score', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='Score de présélection (/10)')),
                ('interview_score', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name="Score d'entretien (/10)")),
                ('overall_rating', models.IntegerField(blank=True, choices=[(1, 'Insuffisant'), (2, 'Satisfaisant'), (3, 'Bien'), (4, 'Très bien'), (5, 'Excellent')], null=True, verbose_name='Évaluation globale')),
                ('interview_date', models.DateTimeField(blank=True, null=True, verbose_name="Date d'entretien")),
                ('interview_notes', models.TextField(blank=True, verbose_name="Notes d'entretien")),
                ('references_checked', models.BooleanField(default=False, verbose_name='Références vérifiées')),
                ('reference_feedback', models.TextField(blank=True, verbose_name='Retour des références')),
                ('rejection_reason', models.TextField(blank=True, verbose_name='Motif de refus')),
                ('feedback_to_candidate', models.TextField(blank=True, verbose_name='Retour au candidat')),
                ('recruiter_notes', models.TextField(blank=True, verbose_name='Notes du recruteur')),
                ('hiring_manager_notes', models.TextField(blank=True, verbose_name='Notes du responsable')),
                ('interviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conducted_interviews', to='hr.employee', verbose_name='Intervieweur')),
                ('job_posting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='hr.recruitment', verbose_name="Offre d'emploi")),
            ],
            options={
                'verbose_name': 'Candidature',
                'verbose_name_plural': 'Candidatures',
                'ordering': ['-application_date'],
            },
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_id', models.CharField(max_length=20, unique=True, verbose_name='ID Formation')),
                ('title', models.CharField(max_length=200, verbose_name='Titre de la formation')),
                ('description', models.TextField(verbose_name='Description')),
                ('training_type', models.CharField(choices=[('internal', 'Formation interne'), ('external', 'Formation externe'), ('online', 'Formation en ligne'), ('workshop', 'Atelier'), ('seminar', 'Séminaire'), ('conference', 'Conférence'), ('certification', 'Certification'), ('mentoring', 'Mentorat')], max_length=20, verbose_name='Type de formation')),
                ('category', models.CharField(choices=[('technical', 'Technique'), ('management', 'Management'), ('soft_skills', 'Compétences comportementales'), ('safety', 'Sécurité'), ('compliance', 'Conformité'), ('language', 'Langues'), ('it', 'Informatique'), ('sales', 'Vente'), ('customer_service', 'Service client'), ('other', 'Autre')], max_length=20, verbose_name='Catégorie')),
                ('trainer', models.CharField(max_length=100, verbose_name='Formateur/Organisme')),
                ('trainer_bio', models.TextField(blank=True, verbose_name='Biographie du formateur')),
                ('training_provider', models.CharField(blank=True, max_length=200, verbose_name='Organisme de formation')),
                ('start_date', models.DateTimeField(verbose_name='Date de début')),
                ('end_date', models.DateTimeField(verbose_name='Date de fin')),
                ('duration_hours', models.PositiveIntegerField(verbose_name='Durée en heures')),
                ('schedule', models.TextField(blank=True, verbose_name='Planning détaillé')),
                ('location', models.CharField(max_length=200, verbose_name='Lieu')),
                ('is_online', models.BooleanField(default=False, verbose_name='Formation en ligne')),
                ('platform_url', models.URLField(blank=True, verbose_name='URL de la plateforme')),
                ('meeting_link', models.URLField(blank=True, verbose_name='Lien de réunion')),
                ('max_participants', models.PositiveIntegerField(verbose_name='Nombre max de participants')),
                ('min_participants', models.PositiveIntegerField(default=1, verbose_name='Nombre min de participants')),
                ('target_audience', models.TextField(verbose_name='Public cible')),
                ('cost_per_participant', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Coût par participant')),
                ('total_budget', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Budget total')),
                ('additional_costs', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Coûts additionnels')),
                ('objectives', models.TextField(verbose_name='Objectifs de la formation')),
                ('learning_outcomes', models.TextField(verbose_name="Résultats d'apprentissage attendus")),
                ('prerequisites', models.TextField(blank=True, verbose_name='Prérequis')),
                ('curriculum', models.TextField(verbose_name='Programme détaillé')),
                ('materials_provided', models.TextField(blank=True, verbose_name='Matériel fourni')),
                ('has_assessment', models.BooleanField(default=False, verbose_name='Évaluation incluse')),
                ('assessment_method', models.CharField(blank=True, max_length=200, verbose_name="Méthode d'évaluation")),
                ('passing_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Score de réussite (%)')),
                ('certification_provided', models.BooleanField(default=False, verbose_name='Certification fournie')),
                ('status', models.CharField(choices=[('planned', 'Planifiée'), ('registration_open', 'Inscriptions ouvertes'), ('registration_closed', 'Inscriptions fermées'), ('ongoing', 'En cours'), ('completed', 'Terminée'), ('cancelled', 'Annulée'), ('postponed', 'Reportée')], default='planned', max_length=20, verbose_name='Statut')),
                ('registration_deadline', models.DateField(blank=True, null=True, verbose_name="Date limite d'inscription")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('training_coordinator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coordinated_trainings', to='hr.employee', verbose_name='Coordinateur formation')),
            ],
            options={
                'verbose_name': 'Formation',
                'verbose_name_plural': 'Formations',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='TrainingParticipation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name="Date d'inscription")),
                ('status', models.CharField(choices=[('registered', 'Inscrit'), ('confirmed', 'Confirmé'), ('attended', 'Présent'), ('absent', 'Absent'), ('completed', 'Terminé'), ('failed', 'Échoué'), ('cancelled', 'Annulé'), ('withdrawn', 'Désisté')], default='registered', max_length=20, verbose_name='Statut')),
                ('motivation', models.TextField(blank=True, verbose_name='Motivation pour cette formation')),
                ('personal_objectives', models.TextField(blank=True, verbose_name='Objectifs personnels')),
                ('attendance_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Taux de présence (%)')),
                ('participation_quality', models.IntegerField(blank=True, choices=[(1, 'Insuffisant'), (2, 'Satisfaisant'), (3, 'Bien'), (4, 'Très bien'), (5, 'Excellent')], null=True, verbose_name='Qualité de participation')),
                ('pre_training_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Score pré-formation (%)')),
                ('post_training_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Score post-formation (%)')),
                ('final_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Score final (%)')),
                ('certificate_issued', models.BooleanField(default=False, verbose_name='Certificat délivré')),
                ('certificate_number', models.CharField(blank=True, max_length=50, verbose_name='Numéro de certificat')),
                ('certificate_date', models.DateField(blank=True, null=True, verbose_name='Date du certificat')),
                ('certificate_expiry', models.DateField(blank=True, null=True, verbose_name='Expiration du certificat')),
                ('participant_feedback', models.TextField(blank=True, verbose_name='Commentaires du participant')),
                ('trainer_feedback', models.TextField(blank=True, verbose_name='Commentaires du formateur')),
                ('training_rating', models.IntegerField(blank=True, choices=[(1, 'Insuffisant'), (2, 'Satisfaisant'), (3, 'Bien'), (4, 'Très bien'), (5, 'Excellent')], null=True, verbose_name='Note de la formation')),
                ('knowledge_application', models.TextField(blank=True, verbose_name='Application des connaissances')),
                ('improvement_areas', models.TextField(blank=True, verbose_name="Domaines d'amélioration")),
                ('follow_up_needed', models.BooleanField(default=False, verbose_name='Suivi nécessaire')),
                ('cost_covered_by_company', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name="Coût pris en charge par l'entreprise")),
                ('personal_contribution', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Contribution personnelle')),
                ('follow_up_date', models.DateField(blank=True, null=True, verbose_name='Date de suivi')),
                ('follow_up_notes', models.TextField(blank=True, verbose_name='Notes de suivi')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.employee', verbose_name='Employé')),
                ('training', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.training', verbose_name='Formation')),
            ],
            options={
                'verbose_name': 'Participation à la formation',
                'verbose_name_plural': 'Participations aux formations',
                'unique_together': {('employee', 'training')},
            },
        ),
        migrations.AddField(
            model_name='training',
            name='participants',
            field=models.ManyToManyField(through='hr.TrainingParticipation', to='hr.employee', verbose_name='Participants'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('check_in', models.TimeField(blank=True, null=True, verbose_name="Heure d'arrivée")),
                ('check_out', models.TimeField(blank=True, null=True, verbose_name='Heure de départ')),
                ('break_start', models.TimeField(blank=True, null=True, verbose_name='Début de pause')),
                ('break_end', models.TimeField(blank=True, null=True, verbose_name='Fin de pause')),
                ('total_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Heures totales')),
                ('break_duration', models.DecimalField(decimal_places=2, default=0, max_digits=4, verbose_name='Durée de pause (h)')),
                ('overtime_hours', models.DecimalField(decimal_places=2, default=0, max_digits=4, verbose_name='Heures supplémentaires')),
                ('late_minutes', models.PositiveIntegerField(default=0, verbose_name='Minutes de retard')),
                ('status', models.CharField(choices=[('present', 'Présent'), ('absent', 'Absent'), ('late', 'En retard'), ('half_day', 'Demi-journée'), ('on_leave', 'En congé'), ('sick', 'Malade'), ('remote', 'Télétravail'), ('business_trip', 'Déplacement professionnel'), ('training', 'Formation')], default='present', max_length=20, verbose_name='Statut')),
                ('is_justified', models.BooleanField(default=True, verbose_name='Justifié')),
                ('justification', models.TextField(blank=True, verbose_name='Justification')),
                ('work_location', models.CharField(blank=True, max_length=200, verbose_name='Lieu de travail')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('validation_date', models.DateTimeField(blank=True, null=True, verbose_name='Date de validation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.employee', verbose_name='Employé')),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_attendances', to='hr.employee', verbose_name='Validé par')),
            ],
            options={
                'verbose_name': 'Présence',
                'verbose_name_plural': 'Présences',
                'ordering': ['-date', 'employee'],
                'unique_together': {('employee', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Payroll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payroll_id', models.CharField(max_length=20, unique=True, verbose_name='ID Paie')),
                ('month', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Mois')),
                ('year', models.PositiveIntegerField(verbose_name='Année')),
                ('work_days', models.PositiveIntegerField(default=22, verbose_name='Jours travaillés')),
                ('total_hours', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='Heures totales')),
                ('overtime_hours', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='Heures supplémentaires')),
                ('base_salary', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Salaire de base')),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Taux horaire')),
                ('transport_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Indemnité transport')),
                ('meal_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Indemnité repas')),
                ('housing_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Indemnité logement')),
                ('family_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Allocations familiales')),
                ('performance_bonus', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Prime de performance')),
                ('overtime_pay', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Heures supplémentaires')),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Commissions')),
                ('other_allowances', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Autres primes')),
                ('social_security', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Sécurité sociale')),
                ('income_tax', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Impôt sur le revenu')),
                ('pension_contribution', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Cotisation retraite')),
                ('advance_deduction', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Avance sur salaire')),
                ('loan_deduction', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Remboursement prêt')),
                ('insurance_deduction', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Assurance')),
                ('union_dues', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Cotisation syndicale')),
                ('other_deductions', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Autres déductions')),
                ('gross_salary', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Salaire brut')),
                ('total_allowances', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Total primes')),
                ('total_deductions', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Total déductions')),
                ('taxable_income', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Revenu imposable')),
                ('net_salary', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Salaire net')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('calculated', 'Calculé'), ('approved', 'Approuvé'), ('paid', 'Payé'), ('cancelled', 'Annulé')], default='draft', max_length=20, verbose_name='Statut')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Date de paiement')),
                ('payment_method', models.CharField(blank=True, choices=[('bank_transfer', 'Virement bancaire'), ('cash', 'Espèces'), ('check', 'Chèque'), ('mobile_money', 'Mobile Money')], max_length=20, verbose_name='Mode de paiement')),
                ('payment_reference', models.CharField(blank=True, max_length=100, verbose_name='Référence de paiement')),
                ('calculated_by', models.CharField(blank=True, max_length=100, verbose_name='Calculé par')),
                ('approved_by', models.CharField(blank=True, max_length=100, verbose_name='Approuvé par')),
                ('approval_date', models.DateTimeField(blank=True, null=True, verbose_name="Date d'approbation")),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.employee', verbose_name='Employé')),
            ],
            options={
                'verbose_name': 'Fiche de paie',
                'verbose_name_plural': 'Fiches de paie',
                'ordering': ['-year', '-month', 'employee'],
                'unique_together': {('employee', 'month', 'year')},
            },
        ),
    ]
